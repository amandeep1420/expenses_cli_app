#! /usr/bin/env ruby

require 'pg'

CONNECTION = expense_db = PG.connect(dbname:"expenses")

def list_expenses
  result = CONNECTION.exec ("SELECT * FROM expenses ORDER BY created_on ASC")
  
  result.each do |tuple|
    columns = [ 
                tuple["id"].rjust(3),
                tuple["created_on"].rjust(10),
                tuple["amount"].rjust(12),
                tuple["memo"]
              ]
              
    puts columns.join(" | ")
  end
end

def display_help
  puts <<~HEREDOC
    An expense recording system
  
    Commands:
    
    add AMOUNT MEMO [DATE] - record a new expense
    clear - delete all expenses
    list - list all expenses
    delete NUMBER - remove expense with id NUMBER
    search QUERY - list expenses with a matching memo field
  HEREDOC
end

def add_expense(amount, memo)
  sql = "INSERT INTO expenses (amount, memo, created_on) VALUES(#{amount}, '#{memo}', NOW());"
  CONNECTION.exec(sql)
end

case ARGV.first
when "list" then list_expenses
when "add"
  amount = ARGV[1]
  memo   = ARGV[2]
  abort "You must provide an amount and memo." unless amount && memo
  add_expense(amount, memo)
else             display_help
end



















































































=begin

Original solution for Assignment #8, below

result = expense_db.exec("SELECT id, created_on, amount, memo 
FROM expenses
ORDER BY created_on");

result.each_row do |row|
  puts "#{row[0]} | #{row[1]} | #{row[2].rjust(10)} | #{row[3]}"
end
=end


